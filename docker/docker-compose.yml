version: "3.2"
networks:
    my-mongo-cluster:
      driver: bridge
services:
   mongo1:
      image: mongo:4.1.13-bionic
      command: --replSet rs0 --bind_ip_all
      ports:
        - 27018:27017
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - /mongo_cluster/data1:/data/db
      networks:
        - my-mongo-cluster
   mongo2:
      image: mongo:4.1.13-bionic
      command: --replSet rs0 --bind_ip_all
      ports:
        - 27019:27017
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - /mongo_cluster/data2:/data/db
      networks:
        - my-mongo-cluster
      depends_on:
        - mongo1
   mongo3:
      image: mongo:4.1.13-bionic
      command: --replSet rs0 --bind_ip_all
      ports:
        - 27020:27017
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - /mongo_cluster/data3:/data/db
      networks:
        - my-mongo-cluster
      depends_on:
       - mongo1
       - mongo2
   mongo-replicator:
      build:
        context: ./
        dockerfile: Dockerfile
      networks:
        - my-mongo-cluster
      depends_on:
        - mongo1
        - mongo2
        - mongo3

   order_service:
      container_name: order_service
      environment:
        SERVER_PORT: 8081
        URI: mongodb://mongo1:27017,mongo2:27017,mongo3:27017/orders?replicaSet=rs0
      expose:
       - 8081
      ports:
       - 8081:8081
      healthcheck:
         test: ["CMD", "curl", "-f", "http://localhost:8081"]
         interval: 30s
         timeout: 10s
         retries: 5
      image: order_service:latest
      build:
        context: ./../
        dockerfile: Dockerfile
      restart: always
      networks:
        - my-mongo-cluster